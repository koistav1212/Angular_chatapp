{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as io from \"socket.io-client\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/services\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@ctrl/ngx-emoji-mart\";\nimport * as i5 from \"@angular/material/icon\";\nconst _c0 = function (a0) {\n  return {\n    me: a0\n  };\n};\nfunction ChatComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20)(1, \"div\", 21);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementStart(3, \"div\", 22);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const message_r2 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(3, _c0, message_r2.senderId == ctx_r0.service.currUser._id));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", message_r2.text, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(message_r2.time);\n  }\n}\nfunction ChatComponent_emoji_mart_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"emoji-mart\", 23);\n    i0.ɵɵlistener(\"emojiClick\", function ChatComponent_emoji_mart_17_Template_emoji_mart_emojiClick_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.emojiClicked($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"darkMode\", false);\n  }\n}\nexport let ChatComponent = /*#__PURE__*/(() => {\n  class ChatComponent {\n    constructor(service) {\n      this.service = service;\n      this.currConv = {};\n      this.messageList = [];\n      this.onSubmit = new EventEmitter();\n      this.backClicked = new EventEmitter();\n      this.message = '';\n      this.socket = io.connect('http://localhost:5000', {\n        withCredentials: true,\n        transports: [\"websocket\"]\n      });\n      //   this.socket = io('http://localhost:5000',{withCredentials: true, transports: [\"websocket\"]});\n    }\n\n    ngOnInit() {\n      // console.log(this.conversation)\n      this.messageList = this.conversation.message;\n      this.getNewMessages();\n    }\n    submitMessage(event) {\n      let value = event.target.value.trim();\n      this.message = '';\n      this.currConv = {\n        \"conversationId\": this.conversation._id,\n        \"reciverId\": this.conversation.members.reciverId,\n        \"senderId\": this.service.currUser._id,\n        \"text\": value,\n        \"timestamps\": Date.now()\n      };\n      if (value.length < 1) return false;\n      this.service.addMessage(this.currConv).subscribe(data => {\n        console.log(data);\n        this.socket.emit('save-message', `Message - Sent by: ${this.service.currUser._id}`);\n        this.ngOnInit();\n      });\n      console.log(this.conversation);\n    }\n    emojiClicked(event) {\n      this.message += event.emoji.native;\n    }\n    getAllMessages() {\n      this.service.getMessages(this.conversation._id).subscribe(data => {\n        console.log(data);\n        this.messageList = data.message;\n      });\n    }\n    getNewMessages() {\n      this.socket.on('new-message', () => {\n        this.getAllMessages();\n      });\n    }\n    static #_ = this.ɵfac = function ChatComponent_Factory(t) {\n      return new (t || ChatComponent)(i0.ɵɵdirectiveInject(i1.services));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ChatComponent,\n      selectors: [[\"app-chat\"]],\n      inputs: {\n        conversation: \"conversation\"\n      },\n      outputs: {\n        onSubmit: \"onSubmit\",\n        backClicked: \"backClicked\"\n      },\n      decls: 22,\n      vars: 5,\n      consts: [[\"id\", \"container\"], [\"id\", \"header\"], [3, \"click\"], [1, \"avatarSection\"], [1, \"picture\"], [3, \"src\"], [1, \"nameSection\"], [1, \"actionButtons\"], [\"src\", \"../../assets/images/attached.svg\"], [\"src\", \"../../assets/images/moreVertIcon.svg\"], [\"id\", \"body\"], [\"class\", \"message\", 3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [\"id\", \"footer\"], [\"id\", \"smileyIcon\"], [\"src\", \"../../assets/images/smileIcon.svg\", 3, \"click\"], [\"style\", \"position: absolute; bottom: 50px\", \"title\", \"Pick your emoji\\u2026\", \"emoji\", \"point_up\", 3, \"darkMode\", \"emojiClick\", 4, \"ngIf\"], [\"id\", \"textarea\"], [3, \"ngModel\", \"ngModelChange\", \"keyup.enter\"], [\"id\", \"micIcon\"], [\"src\", \"../../assets/images/voiceIcon.svg\"], [1, \"message\", 3, \"ngClass\"], [1, \"messageContent\"], [1, \"time\"], [\"title\", \"Pick your emoji\\u2026\", \"emoji\", \"point_up\", 2, \"position\", \"absolute\", \"bottom\", \"50px\", 3, \"darkMode\", \"emojiClick\"]],\n      template: function ChatComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"mat-icon\", 2);\n          i0.ɵɵlistener(\"click\", function ChatComponent_Template_mat_icon_click_2_listener() {\n            return ctx.backClicked();\n          });\n          i0.ɵɵtext(3, \"arrow_left_alt\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"div\", 3)(5, \"div\", 4);\n          i0.ɵɵelement(6, \"img\", 5);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"div\", 6);\n          i0.ɵɵtext(8);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(9, \"div\", 7);\n          i0.ɵɵelement(10, \"img\", 8)(11, \"img\", 9);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(12, \"div\", 10);\n          i0.ɵɵtemplate(13, ChatComponent_div_13_Template, 5, 5, \"div\", 11);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"div\", 12)(15, \"div\", 13)(16, \"img\", 14);\n          i0.ɵɵlistener(\"click\", function ChatComponent_Template_img_click_16_listener() {\n            return ctx.emojiPickerVisible = !ctx.emojiPickerVisible;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(17, ChatComponent_emoji_mart_17_Template, 1, 1, \"emoji-mart\", 15);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(18, \"div\", 16)(19, \"textarea\", 17);\n          i0.ɵɵlistener(\"ngModelChange\", function ChatComponent_Template_textarea_ngModelChange_19_listener($event) {\n            return ctx.message = $event;\n          })(\"keyup.enter\", function ChatComponent_Template_textarea_keyup_enter_19_listener($event) {\n            return ctx.submitMessage($event);\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(20, \"div\", 18);\n          i0.ɵɵelement(21, \"img\", 19);\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(6);\n          i0.ɵɵpropertyInterpolate(\"src\", ctx.conversation.members.reciverPic, i0.ɵɵsanitizeUrl);\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate(ctx.conversation.members.reciverName);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngForOf\", ctx.messageList);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngIf\", ctx.emojiPickerVisible);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngModel\", ctx.message);\n        }\n      },\n      dependencies: [i2.NgClass, i2.NgForOf, i2.NgIf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel, i4.PickerComponent, i5.MatIcon],\n      styles: [\"#container[_ngcontent-%COMP%]{display:flex;width:100%;height:100%;background-color:#e7dfdc;flex-direction:column}#container[_ngcontent-%COMP%]   #header[_ngcontent-%COMP%]{min-height:67px;background-color:#eee;box-shadow:2px 0 4px #ccc;display:flex;justify-content:space-between;align-items:center}#container[_ngcontent-%COMP%]   #header[_ngcontent-%COMP%]   .avatarSection[_ngcontent-%COMP%]{display:flex}#container[_ngcontent-%COMP%]   #header[_ngcontent-%COMP%]   .avatarSection[_ngcontent-%COMP%]   .picture[_ngcontent-%COMP%]{min-width:40px;max-width:40px;margin:0 10px}#container[_ngcontent-%COMP%]   #header[_ngcontent-%COMP%]   .avatarSection[_ngcontent-%COMP%]   .picture[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{max-width:100%}#container[_ngcontent-%COMP%]   #header[_ngcontent-%COMP%]   .avatarSection[_ngcontent-%COMP%]   .nameSection[_ngcontent-%COMP%]{flex-grow:1;color:#545454;display:flex;align-items:center}#container[_ngcontent-%COMP%]   #header[_ngcontent-%COMP%]   .actionButtons[_ngcontent-%COMP%]{min-width:50px;display:flex}#container[_ngcontent-%COMP%]   #header[_ngcontent-%COMP%]   .actionButtons[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:20px;margin-right:15px;cursor:pointer}#container[_ngcontent-%COMP%]   #body[_ngcontent-%COMP%]{flex-grow:1;display:flex;flex-direction:column;flex-direction:column-reverse;padding:20px 50px;overflow:scroll}#container[_ngcontent-%COMP%]   #body[_ngcontent-%COMP%]   .message[_ngcontent-%COMP%]{margin-top:10px;display:flex;align-items:flex-start;color:#767676;flex-direction:column}#container[_ngcontent-%COMP%]   #body[_ngcontent-%COMP%]   .message[_ngcontent-%COMP%]   .messageContent[_ngcontent-%COMP%]{background-color:#fff;border-radius:5px;padding:10px}#container[_ngcontent-%COMP%]   #body[_ngcontent-%COMP%]   .message[_ngcontent-%COMP%]   .messageContent[_ngcontent-%COMP%]   .time[_ngcontent-%COMP%]{text-align:right;color:#959698;font-size:13px;margin-top:5px}#container[_ngcontent-%COMP%]   #body[_ngcontent-%COMP%]   .message.me[_ngcontent-%COMP%]{align-items:flex-end}#container[_ngcontent-%COMP%]   #body[_ngcontent-%COMP%]   .message.me[_ngcontent-%COMP%]   .messageContent[_ngcontent-%COMP%]{background-color:#dcf7c5}#container[_ngcontent-%COMP%]   #footer[_ngcontent-%COMP%]{min-height:67px;background-color:#f0eeed;display:flex}#container[_ngcontent-%COMP%]   #footer[_ngcontent-%COMP%]   #smileyIcon[_ngcontent-%COMP%]{flex-basis:50px}#container[_ngcontent-%COMP%]   #footer[_ngcontent-%COMP%]   #textarea[_ngcontent-%COMP%]{flex-grow:1;display:flex;align-items:center}#container[_ngcontent-%COMP%]   #footer[_ngcontent-%COMP%]   #textarea[_ngcontent-%COMP%]   textarea[_ngcontent-%COMP%]{width:100%;height:45px;border:0px;border-radius:4px;resize:none;outline:none;padding:14px;font-family:sans-serif;box-sizing:border-box}#container[_ngcontent-%COMP%]   #footer[_ngcontent-%COMP%]   #micIcon[_ngcontent-%COMP%]{flex-basis:50px}#container[_ngcontent-%COMP%]   #footer[_ngcontent-%COMP%]   #micIcon[_ngcontent-%COMP%], #container[_ngcontent-%COMP%]   #footer[_ngcontent-%COMP%]   #smileyIcon[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:center}#container[_ngcontent-%COMP%]   #footer[_ngcontent-%COMP%]   #micIcon[_ngcontent-%COMP%]   img[_ngcontent-%COMP%], #container[_ngcontent-%COMP%]   #footer[_ngcontent-%COMP%]   #smileyIcon[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{max-width:40%;cursor:pointer}\"]\n    });\n  }\n  return ChatComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}