{"ast":null,"code":"import _asyncToGenerator from \"C:/Games/my_Whatsapp_clone/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component, EventEmitter, Output } from '@angular/core';\nexport let SidebarComponent = class SidebarComponent {\n  get filteredConversations() {\n    return this.conversations.filter(conversation => {\n      return conversation.name.toLowerCase().includes(this.searchText.toLowerCase()) || conversation.latestMessage.toLowerCase().includes(this.searchText.toLowerCase());\n    });\n  }\n  get filteredUsers() {\n    return this.allUsers.filter(conversation => {\n      return conversation.name.toLowerCase().includes(this.searchText.toLowerCase()) || conversation.latestMessage.toLowerCase().includes(this.searchText.toLowerCase());\n    });\n  }\n  constructor(services, afAuth) {\n    this.services = services;\n    this.afAuth = afAuth;\n    this.conversationClicked = new EventEmitter();\n    this.conversations = [];\n    this.allUsers = [];\n  }\n  ngOnInit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      (yield _this.services.getCurrUser()).subscribe(res => {\n        console.log(res);\n        _this.services.setCurrUser(res.user);\n        _this.getAllUsers();\n        _this.getAllConversation();\n      });\n    })();\n  }\n  getAllUsers() {\n    this.services.getUsers().subscribe(res => {\n      console.log(res);\n      this.allUsers = res.userList;\n    });\n  }\n  getAllConversation() {\n    this.services.getAllConversation(this.services.currUser).subscribe(res => {\n      if (res) this.conversations = res;\n      console.log(this.conversations);\n    });\n  }\n  connect(userId, userName, userPic) {\n    console.log(this.services.currUser);\n    let prvConv = [];\n    if (this.services.currUser.conversations) prvConv = this.services.currUser.conversations;\n    let senderprvConnect = [];\n    if (this.services.currUser.connections) senderprvConnect = this.services.currUser.connections;\n    this.services.newConversation({\n      reciverId: userId,\n      senderId: this.services.currUser._id,\n      reciverName: userName,\n      reciverPic: userPic,\n      senderName: this.services.currUser.userName,\n      senderPic: this.services.currUser.userName\n    }).subscribe(res => {\n      console.log(res);\n      prvConv.push(res.converstion._id);\n      senderprvConnect.push(userId);\n      this.services.userUpdate({\n        conversations: prvConv,\n        connections: senderprvConnect\n      }, this.services.currUser._id).subscribe(res => {\n        console.log(res);\n        this.services.getCurrUser();\n        this.getAllConversation();\n        this.services.userUpdate({\n          conversations: prvConv,\n          connections: senderprvConnect\n        }, userId).subscribe(res => {});\n      });\n    });\n  }\n};\n__decorate([Output()], SidebarComponent.prototype, \"conversationClicked\", void 0);\nSidebarComponent = __decorate([Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss']\n})], SidebarComponent);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}